#config zsh ccorazza

PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/texbin:~/.brew/bin
HISTFILE=~/.zshrc_history
SAVEHIST=4200
HISTSIZE=4200
PROMPT=$'%{\e[38;5;239m%}%m %{\e[0;33m%}%~ %{\e[1;34m%}[%t ]%{\e[0m%} \|> '

setopt inc_append_history
setopt share_history

if [[ -f ~/.myzshrc ]]; then
  source ~/.myzshrc
fi

USER=`/usr/bin/whoami`
export USER
GROUP=`/usr/bin/id -gn $user`
export GROUP
MAIL="$USER@student.42.fr"
export MAIL

# -------- 42 Aliases ---------
alias auteur="echo $USER > auteur && git add auteur"
alias N="norminette"

# -------- Directories Aliases ---------

alias l="ls -bFGho"
alias ll="ls -abFGho"

alias mkdir="mkdir -pv"
alias usb="cd /Volumes"

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias ~="cd ~"

# -------- Workflow  Aliases ---------
alias clean='cd ~/Library/Caches/; find . -not -path "Homebrew" -delete -print 2> /dev/null; echo "[OK]"; cd - &> /dev/null;'
alias cleanswp="find ./ -name '*.sw[mnop]' -print -delete"

alias ne="emacs"
alias v="vim"
alias j="jobs"

alias src="source ~/.zshrc"
alias zrc="vim ~/.zshrc"
alias vrc="vim ~/.myvimrc"

# -------- Functions ---------
## Shell

function mkgo()
{
	mkdir "$@"
	cd "$@"
}

function look()
{
	for i in $*
	do
	printf "\n# [LOOKING FOR : $i]\n|\n" && ldapsearch -Q uid="$i" | grep -e "^mobile-phone" | sed 's/mobile-phone:/|/' && printf "| $i@student.42.fr\n" && wget -qO - http://dashboard.42.fr/crawler/pull/$i | grep -o 'last_host": [^ .]\+' | sed 's/last_host": "/| /g' && printf "|\n# [END] \n\n" ;
	done
}

function colors()
{
for COLOR in $(seq 0 255)
do
    for STYLE in "38;5"
    do
        TAG="\033[${STYLE};${COLOR}m"
        STR="${STYLE};${COLOR}"
        echo -ne "${TAG}${STR}${NONE}  "
    done
    echo
done
}

## PHP

function pcreate()
{
if [[ $# -eq 1 && ! -f $1 ]]
	then
		printf "#!/usr/bin/php\n<?PHP\n\n\n?>" > $1
	chmod 755 $1
	vim $1
fi
}

function classcreate()
{
if [[ $# -eq 1 && ! -f $1 ]]
	then
	{
		printf "<?PHP\n\n\n?>" > $1.class.php
		printf "<- Doc ----------------------------------------------------------------------\n\n\n---------------------------------------------------------------------- Doc ->" > ./doc/$1.doc.php
	}
	vim $1.class.php
fi
}

## Git

# The gitlaunch() function needs you to have created your repository on github.com beforehand. Be smart, lad, read the code.
function     gitlaunch()
{
	echo "\e[35m[?] WARNING \e[0m> The gitlaunch() function needs you to have created your repository on github.com beforehand. Be smart, lad, read the code."
	mkdir "$@"
	cd "$@"
	echo "\e[32m"
    git init
    echo "\e[0m"
    echo "*.[oa]\n*.pdf\n*~\n*.swp\n" > .git/info/exclude
    git config --global user.name $USER
    git config --global user.email $MAIL
    #curl -u 'Curcolio'    https://api.github.com/user/repos -d "{    \"name\":\"$1\",
    #                    \"private\": false,
    #                    \"has_issues\": true,
    #                    \"has_downloads\": true,
    #                    \"has_wiki\": false}"
    #                    > ../logs/$1curl.repo_config.log
    echo "\e[34m"
    git remote add origin https://github.com/$USER/$1.git
    auteur
    git commit -qm "Initializing commit -- These files are default files generated automatically"
    git status
    echo "\e[0m"
    git push origin master
    echo "\n\n ### --- \e[32mLOG\e[0m --- ###\n\n"
    git log --shortstat
}
